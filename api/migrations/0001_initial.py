# Generated by Django 3.0.9 on 2020-08-19 08:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Appointment_Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('email_id', models.EmailField(default='', max_length=100)),
                ('city', models.CharField(blank=True, max_length=20)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('country', models.CharField(blank=True, max_length=20)),
                ('zip_code', models.CharField(blank=True, max_length=6)),
                ('mobile_number', models.CharField(blank=True, max_length=10)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('joined', models.DateTimeField(auto_now_add=True, null=True)),
                ('gender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Gender')),
            ],
        ),
        migrations.CreateModel(
            name='Zorg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('owner_first_name', models.CharField(max_length=20)),
                ('owner_last_name', models.CharField(max_length=20)),
                ('salon_email_id', models.EmailField(max_length=100)),
                ('owner_email_id', models.EmailField(max_length=100)),
                ('open_year_of_salon', models.CharField(max_length=4)),
                ('website', models.URLField(max_length=100)),
                ('base_rating', models.IntegerField(default=2)),
                ('joined', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Zorg_Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField()),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.User')),
                ('zorg', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Zorg')),
            ],
        ),
        migrations.CreateModel(
            name='Zorg_Branche',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(blank=True, max_length=20)),
                ('state', models.CharField(blank=True, max_length=50)),
                ('country', models.CharField(blank=True, max_length=20)),
                ('zip_code', models.CharField(blank=True, max_length=6)),
                ('zorg', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Zorg')),
            ],
        ),
        migrations.CreateModel(
            name='UserPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.URLField(max_length=255)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.User')),
            ],
        ),
        migrations.CreateModel(
            name='UserCoin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.User')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Categories')),
                ('zorg', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Zorg')),
            ],
        ),
        migrations.AddField(
            model_name='categories',
            name='zorg',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Zorg'),
        ),
        migrations.CreateModel(
            name='AppointmentDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicePrice', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('appointment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Appointment')),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Zorg_Branche')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Categories')),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Service')),
            ],
        ),
        migrations.AddField(
            model_name='appointment',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Appointment_Status'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.User'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='zorg',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Zorg'),
        ),
        migrations.CreateModel(
            name='Advertisment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now_add=True, null=True)),
                ('link', models.URLField(max_length=255)),
                ('zorg', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.Zorg')),
            ],
        ),
    ]
